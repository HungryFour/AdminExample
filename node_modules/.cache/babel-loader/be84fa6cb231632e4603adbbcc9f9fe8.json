{"remainingRequest":"/Users/Four/MoneyProjects/landspace/landscape-admin/node_modules/babel-loader/lib/index.js!/Users/Four/MoneyProjects/landspace/landscape-admin/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/Four/MoneyProjects/landspace/landscape-admin/src/mock.js","dependencies":[{"path":"/Users/Four/MoneyProjects/landspace/landscape-admin/src/mock.js","mtime":1594631945600},{"path":"/Users/Four/MoneyProjects/landspace/landscape-admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Four/MoneyProjects/landspace/landscape-admin/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Four/MoneyProjects/landspace/landscape-admin/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzJzsKdmFyIFJhbmRvbSA9IE1vY2suUmFuZG9tOyAvLyDnmbvlvZUKCk1vY2subW9jaygnL2FwaS9sb2dpbicsICdwb3N0JywgZnVuY3Rpb24gKG9wdGlvbikgewogIHZhciBfSlNPTiRwYXJzZSA9IEpTT04ucGFyc2Uob3B0aW9uLmJvZHkpLAogICAgICB1c2VybmFtZSA9IF9KU09OJHBhcnNlLnVzZXJuYW1lLAogICAgICBwYXNzd29yZCA9IF9KU09OJHBhcnNlLnBhc3N3b3JkOwoKICByZXR1cm4gdXNlcm5hbWUgPT09ICdhZG1pbicgJiYgcGFzc3dvcmQgPT09ICdhZG1pbic7Cn0pOyAvLyDnlKjmiLfmlbDmja4KCnZhciB1c2VyRGF0YSA9IGZ1bmN0aW9uIHVzZXJEYXRhKCkgewogIHZhciB1c2VycyA9IFtdOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHsKICAgIHZhciB1c2VyID0gewogICAgICAnaWQnOiBpICsgMSwKICAgICAgJ2RhdGUnOiBSYW5kb20uZGF0ZSgneXl5eS1NTS1kZCcpLAogICAgICAnbmFtZSc6IFJhbmRvbS5jbmFtZSgpLAogICAgICAnYWRkcmVzcyc6IE1vY2subW9jaygnQGNvdW50eSh0cnVlKScpLAogICAgICAncGhvbmUnOiBNb2NrLm1vY2soL14xWzAtOV17MTB9JC8pLAogICAgICAnc3RhdHVzJzogUmFuZG9tLmludGVnZXIoMCwgMSkKICAgIH07CiAgICB1c2Vycy5wdXNoKHVzZXIpOwogIH0KCiAgcmV0dXJuIHVzZXJzOwp9OwoKTW9jay5tb2NrKCcvYXBpL3VzZXJzJywgdXNlckRhdGEpOyAvLyDmlofnq6DmlbDmja4KCnZhciBhcnRpY2xlRGF0YSA9IGZ1bmN0aW9uIGFydGljbGVEYXRhKCkgewogIHZhciBhcnRpY2xlcyA9IFtdOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IDIwOyBpKyspIHsKICAgIHZhciBhcnRpY2xlID0gewogICAgICAnaWQnOiBpICsgMSwKICAgICAgJ2RhdGUnOiBSYW5kb20uZGF0ZSgneXl5eS1NTS1kZCcpLAogICAgICAndGl0bGUnOiBSYW5kb20uY3NlbnRlbmNlKCksCiAgICAgICdhdXRob3InOiBSYW5kb20uY25hbWUoKSwKICAgICAgJ2NvbnRlbnQnOiBSYW5kb20uY3NlbnRlbmNlKCksCiAgICAgICdzdGF0dXMnOiBSYW5kb20uaW50ZWdlcigwLCAxKQogICAgfTsKICAgIGFydGljbGVzLnB1c2goYXJ0aWNsZSk7CiAgfQoKICByZXR1cm4gYXJ0aWNsZXM7Cn07CgpNb2NrLm1vY2soJy9hcGkvYXJ0aWNsZXMnLCBhcnRpY2xlRGF0YSk7"},{"version":3,"sources":["/Users/Four/MoneyProjects/landspace/landscape-admin/src/mock.js"],"names":["Mock","Random","mock","option","JSON","parse","body","username","password","userData","users","i","user","date","cname","integer","push","articleData","articles","article","csentence"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,IAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB,C,CAEA;;AACAD,IAAI,CAACE,IAAL,CAAU,YAAV,EAAwB,MAAxB,EAAgC,UAACC,MAAD,EAAY;AAAA,oBACbC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACG,IAAlB,CADa;AAAA,MACpCC,QADoC,eACpCA,QADoC;AAAA,MAC1BC,QAD0B,eAC1BA,QAD0B;;AAE1C,SAAQD,QAAQ,KAAK,OAAb,IAAwBC,QAAQ,KAAK,OAA7C;AACD,CAHD,E,CAKA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIC,IAAI,GAAG;AACT,YAAMD,CAAC,GAAG,CADD;AAET,cAAQV,MAAM,CAACY,IAAP,CAAY,YAAZ,CAFC;AAGT,cAAQZ,MAAM,CAACa,KAAP,EAHC;AAIT,iBAAWd,IAAI,CAACE,IAAL,CAAU,eAAV,CAJF;AAKT,eAASF,IAAI,CAACE,IAAL,CAAU,cAAV,CALA;AAMT,gBAAUD,MAAM,CAACc,OAAP,CAAe,CAAf,EAAkB,CAAlB;AAND,KAAX;AAQAL,IAAAA,KAAK,CAACM,IAAN,CAAWJ,IAAX;AACD;;AACD,SAAOF,KAAP;AACD,CAdD;;AAeAV,IAAI,CAACE,IAAL,CAAU,YAAV,EAAwBO,QAAxB,E,CAEA;;AACA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIQ,OAAO,GAAG;AACZ,YAAMR,CAAC,GAAG,CADE;AAEZ,cAAQV,MAAM,CAACY,IAAP,CAAY,YAAZ,CAFI;AAGZ,eAASZ,MAAM,CAACmB,SAAP,EAHG;AAIZ,gBAAUnB,MAAM,CAACa,KAAP,EAJE;AAKZ,iBAAWb,MAAM,CAACmB,SAAP,EALC;AAMZ,gBAAUnB,MAAM,CAACc,OAAP,CAAe,CAAf,EAAkB,CAAlB;AANE,KAAd;AAQAG,IAAAA,QAAQ,CAACF,IAAT,CAAcG,OAAd;AACD;;AACD,SAAOD,QAAP;AACD,CAdD;;AAeAlB,IAAI,CAACE,IAAL,CAAU,eAAV,EAA2Be,WAA3B","sourcesContent":["import Mock from 'mockjs'\n\nconst Random = Mock.Random\n\n// 登录\nMock.mock('/api/login', 'post', (option) => {\n  let { username, password } = JSON.parse(option.body)\n  return (username === 'admin' && password === 'admin')\n})\n\n// 用户数据\nconst userData = () => {\n  let users = []\n  for (let i = 0; i < 10; i++) {\n    let user = {\n      'id': i + 1,\n      'date': Random.date('yyyy-MM-dd'),\n      'name': Random.cname(),\n      'address': Mock.mock('@county(true)'),\n      'phone': Mock.mock(/^1[0-9]{10}$/),\n      'status': Random.integer(0, 1)\n    }\n    users.push(user)\n  }\n  return users\n}\nMock.mock('/api/users', userData)\n\n// 文章数据\nconst articleData = () => {\n  let articles = []\n  for (let i = 0; i < 20; i++) {\n    let article = {\n      'id': i + 1,\n      'date': Random.date('yyyy-MM-dd'),\n      'title': Random.csentence(),\n      'author': Random.cname(),\n      'content': Random.csentence(),\n      'status': Random.integer(0, 1)\n    }\n    articles.push(article)\n  }\n  return articles\n}\nMock.mock('/api/articles', articleData)\n"]}]}